apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: kube-prometheus
spec:
  ports:
  - nodePort: 41000
    port: 9093
    protocol: TCP
    targetPort: 9093
  selector:
    name: alertmanager
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: kube-prometheus
data:
  alertmanager.yml: |-
    global:
      resolve_timeout: 1m                                                  # 每分钟检测一次是否恢复
      # Email 配置
      smtp_smarthost: 'smtp.163.com:25'
      smtp_from: 'qujiayu98@163.com'
      smtp_auth_username: 'qujiayu98@163.com'
      smtp_auth_password: 'RQBXKEDXQXSSHZZM'
      smtp_require_tls: false                                              # 不使用加密认证
      # wechat 配置
      wechat_api_url: 'https://qyapi.weixin.qq.com/cgi-bin/'               # api接口
      wechat_api_corp_id: 'ww76853a1c2fd2fe46'                             # 企业微信账号唯一 ID， 可以在我的企业中查看
      wechat_api_secret: 'XdfSVC15fucj9lWaexqXo0RXJZbRMQhGB_ETV8iTrqQ'     # 第三方企业应用的密钥，可以在自己创建的第三方企业应用详情页面查看
    templates:
    - '/etc/template/*.yml'
    route:                                                   # 用于配置告警分发策略
      group_by: ['alertname','type','serverity']             # 采用哪个标签来作为分组依据,默认每个rule都会带alertname这个标签
      group_wait: 10s                                        # 组告警等待时间。也就是告警产生后等待 10s ，如果有同组告警一起发出
      group_interval: 10s                                    # 上下两组发送告警的间隔时间
      repeat_interval: 10m                                   # 重复发送告警的时间，减少相同邮件的发送频率 ，默认是 1h
      receiver: wechat                                       # 定义谁来收告警,单子路由如果没有匹配到，则由默认的reciver来发
      routes:
      - match:                                               # 支持match和match_re
          type: CPU
        receiver: 'email'
      - match_re:
          type: ^(ME|TEST)$
        receiver: 'wechat'
    receivers:
    - name: 'wechat'
      wechat_configs:
      - send_resolved: true
        # to_party: '1|2'                                      # 发送给企业微信某个部门
        # to_user: 'user_name2|username2|@all'                 # 发送给企业微信中某个用户
        to_user: '@all' 
        agent_id: '1000003'                                    # 企业微信中创建的应用的ID
        corp_id: 'ww76853a1c2fd2fe46'                          # 企业微信账号唯一 ID， 可以在我的企业中查看
        api_secret: 'XdfSVC15fucj9lWaexqXo0RXJZbRMQhGB_ETV8iTrqQ'                    
        message: '{{ template "wechat.default.message" .  }}'  # 指定使用模板
    - name: 'email'
      email_configs:
      - send_resolved: true
        to: '2281823407@qq.com'
        html: '{{ template "email.default.html" . }}' # 指定使用模板
    inhibit_rules:                # 当遇到serverity: 'critical'告警时将会将serverity: 'warning'的告警抑制，并一并发送告警给recevier
    - source_match:
        serverity: 'critical' 
      target_match:
        serverity: 'warning'
      equal: ['HostHighCpuLoad']  # Apply inhibition if the alertname is the same.

  template-email.yml: |-                    # 不同模板可以定义不一样的内容
    {{ define "email.default.html" }}
        {{ range .Alerts }}
    <pre>
    ========== start ==========
    告警程序: AlertManager
    告警级别: {{ .Labels.severity }} 
    告警类型: {{ .Labels.alertname }} 
    故障主机: {{ .Labels.instance }} 
    告警主题: {{ .Annotations.summary }}
    告警详情: {{ .Annotations.description }}
    触发时间: {{ (.StartsAt.Add 28801e9).Format "2006-01-02 15:04:05" }}
    ========== end ==========
    </pre>
        {{ end }}
    {{ end }}

  template-wechat.yml: |-
    {{ define "wechat.default.message" }}
    {{ range .Alerts }}
    ========== start  ========
    告警程序: AlertManager
    告警级别: {{ .Labels.severity }}
    告警类型: {{ .Labels.alertname }}
    故障主机: {{ .Labels.instance }}
    告警主题: {{ .Annotations.summary }}
    告警详情: {{ .Annotations.description }}
    触发时间: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
    ========== end  ==========
    {{ end }}
    {{ end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: kube-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      name: alertmanager
  template:
    metadata:
      name: alertmanager
      labels:
        name: alertmanager
    spec:
      nodeName: k8s-master-1      # 设置在k8s-master-1上运行
      tolerations:                # 设置能容忍在master节点运行
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: alertmanager
        image: prom/alertmanager:v0.24.0
        args:
        - "--config.file=/etc/alertmanager.yml"
        - "--storage.path=/alertmanager"
        ports:
        - name: alertmanager
          containerPort: 9093
        volumeMounts:
        - name: alertmanager-storage
          mountPath: /etc/alertmanager
        - name: alertmanager-config
          mountPath: /etc/alertmanager.yml
          subPath: alertmanager.yml
        - name: alertmanager-config
          mountPath: /etc/template/template-email.yml
          subPath: template-email.yml
        - name: alertmanager-config
          mountPath: /etc/template/template-wechat.yml
          subPath: template-wechat.yml
      volumes:
      - name: alertmanager-config
        configMap:
          name: alertmanager-config
      - name: alertmanager-storage
        hostPath:
          path: /alertmanager
