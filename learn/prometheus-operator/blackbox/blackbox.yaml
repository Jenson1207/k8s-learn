apiVersion: v1
kind: ConfigMap
metadata:
  name: blackbox-config
  namespace: monitor
data:
  blackbox.yml: |-
    modules:
      http_2xx:                          # http 检测模块  Blockbox-Exporter 中所有的探针均是以 Module 的信息进行配置
        prober: http
        timeout: 15s
        http:
          valid_http_versions: ["HTTP/1.1", "HTTP/2"]   
          valid_status_codes: [200,301,302]
          method: GET
          preferred_ip_protocol: "ip4"   # 选用IPV4
          follow_redirects: true         # 跟进重定向
      tcp_connect:                       # TCP模块
        prober: tcp
        timeout: 15s
      dns_tcp:                           # tcp探测DNS
        prober: dns
        dns:
          transport_protocol: "tcp"      # 默认是 udp
          preferred_ip_protocol: "ip4"   # 默认是 ip6
          query_name: "kubernetes.default.svc.cluster.local" # 利用这个域名来检查 dns 服务器
          query_type: "A"                                    # 如果是 kube-dns ，一定要加入这个，因为不支持Ipv6
      icmp:
        prober: icmp
        icmp:
          preferred_ip_protocol: "ip4"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blackbox
  namespace: monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blackbox
  template:
    metadata:
      labels:
        app: blackbox
    spec:
      nodeName: k8s-master-1
      containers:
      - image: prom/blackbox-exporter:v0.21.1
        name: blackbox
        args:
        - --config.file=/etc/blackbox_exporter/blackbox.yml
        - --log.level=info 
        - --web.listen-address=:9115
        ports:
        - name: http
          containerPort: 9115
        volumeMounts:
        - name: config
          mountPath: /etc/blackbox_exporter
      dnsPolicy: ClusterFirst
      volumes:
      - name: config
        configMap:
          name: blackbox-config
---
apiVersion: v1
kind: Service
metadata:
  name: blackbox
  namespace: monitor
  labels:
    app: blackbox
spec:
  selector:
    app: blackbox
  type: NodePort
  ports:
  - name: http
    port: 9115
    targetPort: 9115
    nodePort: 39115
---
#apiVersion: v1
#kind: Secret
#metadata:
#  name: blackbox
#  namespace: monitor
#stringData: 
#  blackbox.yaml: | 
#  - job_name: "icmp-check"  # 这样写会出问题
#    metrics_path: /probe
#    params:
#      module: icmp
#    static_configs:
#    - targets:
#      - 192.168.0.10
#      - 192.168.0.11
---
# 使用这种方式进行黑盒监控时多个target只抓取了第一个target，原因暂时未找到,生成的scrp_url=10.70.0.128:9115/probe?module=tcp_connect&target=192.168.0.10:22&target=192.168.0.11:22""
# issues https://github.com/prometheus-operator/prometheus-operator/issues/2821
#apiVersion: monitoring.coreos.com/v1   
#kind: ServiceMonitor
#metadata:
#  name: blackbox
#  namespace: monitor
#  labels:
#    application: "prometheus"
#spec:
#  namespaceSelector:
#    matchNames: ["monitor"]
#  selector:
#    matchLabels:
#      app: blackbox
#  endpoints:
#  - interval: "15s"
#    path: /probe
#    port: http
#    scheme: HTTP
#    params:
#      module:
#      - tcp_connect
#      target:
#      - 192.168.0.10:22
#      - 192.168.0.11:22
#    relabelings: 
#    - sourceLabels: [__address__]
#      targetLabel: __param_target
#    - sourceLabels: [__param_target]
#      targetLabel: instance
#    - targetLabel: __address__
#      replacement: blackbox.monitor.svc.cluster.local:9115
---
# 这种太重复了,会导致生成很多instance，需要对标签进行处理,后续二个job 需进行标签聚合，暂时未找到如何处理
#apiVersion: monitoring.coreos.com/v1
#kind: Probe
#metadata:
#  name: blackbox-tcp-check
#  namespace: monitor
#  labels:
#    application: "prometheus"
#spec:
#  jobName: tcp-check
#  module: tcp_connect
#  prober:
#    url: blackbox.monitor.svc.cluster.local:9115
#  targets:
#    staticConfig:
#      static:
#      - 192.168.0.10:22
#      - 192.168.0.11:22
#  metricRelabelings:
#  - sourceLabels: [__address__]
#    targetLabel: instance
---
#apiVersion: monitoring.coreos.com/v1
#kind: Probe
#metadata:
#  name: blackbox-icmp-check
#  namespace: monitor
#  labels:
#    application: "prometheus"
#spec:
#  jobName: icmp-check
#  module: icmp
#  prober:
#    url: blackbox.monitor.svc.cluster.local:9115
#  targets:
#    staticConfig:
#      static:
#      - 192.168.0.10
#      - 192.168.0.11
#  metricRelabelings:
#  - sourceLabels: [__address__]  # 基于IP保证后续instance一致
#    targetLabel: instanc
