apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql
data:
  master.cnf: |
    [mysqld]
    log_bin=mysql-bin  #写文件名，默认是以/var/lib/mysql为路径
  slave.cnf: |
    [mysqld]
    log_bin=mysql-bin
    super-read-only
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - name: mysql
    port: 3306
  clusterIP: None
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql
  replicas: 3
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
      - name: init-mysql
        image: registry.cn-hangzhou.aliyuncs.com/jiayu-kubernetes/mysql:5.7.36
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: conf
          mountPath: /mnt/conf.d
        - name: config-map
          mountPath: /mnt/config-map
        command:
        - bash
        - "-c"
        - |
          set -ex
          # 判断主机名
          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
          # 获取主机名,mysql-0,mysql-1
          ordinal=${BASH_REMATCH[1]}
          serverid=$(($ordinal+100))
          echo -e "[mysqld]\nserver-id=$serverid" > /mnt/conf.d/server-id.cnf
          if [[ $ordinal -eq 0 ]]; then
            cp /mnt/config-map/master.cnf /mnt/conf.d
          else
            cp /mnt/config-map/slave.cnf /mnt/conf.d
          fi
      - name: clone-mysql
        image: registry.cn-hangzhou.aliyuncs.com/jiayu-kubernetes/xtrabackup:v2.4.24
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
          subPath: mysql  #生成/mysql-data/mysql
        command:
        - bash
        - "-c"
        - |
          set -ex
          # 只有Slave节点才需要接收Master发送过来的数据
          [[ -d /var/lib/mysql ]] && exit 0
          # 正则匹配序号,匹配失败则异常退出
          [[ `hostname` =~ ([0-9]+)$ ]] || exit 1
          # 获取序号
          ordinal=${BASH_REMATCH[1]}
          [[ $ordinal -eq 0 ]] && exit 0
          # ncat --recv-only mysql-$((ordinal-1)).mysql 3307 ： 使用ncat从前一个节点中复制数据,3307端口是我们启动的一个sidecar容器
          # xbstream -x -C /var/lib/mysql ： 从标准的输入流中提取数据到 /var/lib/mysql中
          ncat --recv-only mysql-$((ordinal-1)).mysql.default.svc.cluster.local 3307 | xbstream -x -C /var/lib/mysql
          # --prepare参数,在备份完成后，数据尚且不能用于恢复操作，因为备份的数据中可能会包含尚未提交的事务或已经提交但尚未同步至数据文件中的事务
          # --prepare参数实现通过回滚未提交的事务及同步已经提交的事务至数据文件使数据文件处于一致性状态
          xtrabackup --prepare --target-dir=/var/lib/mysql

      # 实际对外提供服务
      containers:
      - name: mysql
        image: registry.cn-hangzhou.aliyuncs.com/jiayu-kubernetes/mysql:5.7.36
        imagePullPolicy: IfNotPresent
        ports:
        - name: mysql
          containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "password"
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
#        resources:
#          requests:
#            cpu: 500m
#            memory: 1Gi
        livenessProbe:
          exec:
            command: ["mysqladmin","ping","-uroot","-p${MYSQL_ROOT_PASSWORD}"]
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: ["mysqladmin","ping","-uroot","-p${MYSQL_ROOT_PASSWORD}"]
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
      # 用于MySQL传输备份数据
      - name: xtrabackup
        image: registry.cn-hangzhou.aliyuncs.com/jiayu-kubernetes/xtrabackup:v2.4.24
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
        command:
        - bash
        - "-c"
        - |
          set -ex
          cd /var/lib/mysql # 要先进到这个目录，否则xbk后续流式传输时会报错
          # 如果备份主节点,xtrabackup_slave_info文件内容为空，此时第二个Slave节点只能通过xtrabackup_binlog_info来获取change master to信息，如果备份Slave节点xtrabackup_slave_info文件有类似：CHANGE MASTER TO MASTER_LOG_FILE='mysql-bin.000003', MASTER_LOG_POS=437;的信息
          # 该备份来自Slave节点
          if [[ -s xtrabackup_slave_info ]]; then
            # 去掉;
            cat xtrabackup_slave_info | sed -E 's/;$//g' > change_master_to.sql.in
            rm -f xtrabackup_slave_info
          elif [[ ! -s xtrabackup_slave_info && -s xtrabackup_binlog_info ]]
            [[ `cat xtrabackup_binlog_info` =~ ^(.*?)[[:space:]]+([0-9]+)$ ]] || exit 1
            echo "CHANGE MASTER TO MASTER_LOG_FILE='${BASH_REMATCH[1]}', MASTER_LOG_POS=${BASH_REMATCH[2]}" > change_master_to.sql.in
            rm -f xtrabackup_binlog_info
          fi
          if [[ -f change_master_to.sql.in ]]; then
            echo 'Waiting for mysqld to be ready (accept connections)'
            until mysql -h 127.0.0.1 -e 'select 1';do sleep 1;done
            sleep 5
            echo 'Initializing replication from clone position'
            # 执行change master sql
            sql="$(<change_master_to.sql.in), master_host='mysql-0.mysql', master_user='root', master_password='', master_connect_retry=10; start slave;"
            mysql -h 127.0.0.1 -e "$sql" || exit 1
             # 重命名change_master_to.sql.in文件，防止重复执行change master
             mv change_master_to.sql.in change_master_to.sql.in.orig
          fi
          exec ncat --listen --keep-open --send-only --max-conns=1 3307 -c "xtrabackup --backup --slave-info --stream=xbstream --host=127.0.0.1 --user=root"
      volumes:
      - name: conf
        emptyDir: {}
      - name: mysql-data
        emptyDir: {}
      - name: config-map
        configMap:
          name: mysql











#apiVersion: v1
#kind: Service
#metadata:
#  name: mysql-write
##  namespace: web-mysql
#spec:
#  ports:
#  - name: mysql
#    port: 3306
#  clusterIP: None
#  selector:
#    app: web-mysql
#
#---  ###对外提供读服务
#apiVersion:
#kind: Service
#metadata:
#  name: mysql-read
##  namespace: web-mysql
#spec:
#  ports:
#  - name: mysql
#    port: 3306
#    nodePort: 33006
#  selector:
#    app: web-mysql
#  type: NodePort
