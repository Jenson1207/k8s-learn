apiVersion: apps/v1
kind: Deployment
metadata: 
  name: jms-core
  namespace: jms
spec:
  minReadySeconds: 90
  replicas: 1
  selector:
    matchLabels:
      app: jms-core
  template:
    metadata:
      name: jms-core
      labels:
        app: jms-core
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
      - name: jms-core
        image: jumpserver/core:v2.20.0
        imagePullPolicy: Never
        tty: true
        envFrom:
        - configMapRef:
            name: jms-core-config
        command: ["/bin/bash","-c","python jms start web"] #command默认没带shell环境
        readinessProbe:
          periodSeconds: 10
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 5
          initialDelaySeconds: 90
          exec: 
            command: ["/bin/sh","-c","curl -fsL http://localhost:8080/api/health/ > /dev/null"]
        volumeMounts:
        - name: jms-nfs-data
          mountPath: /opt/jumpserver/data
        - name: jms-nfs-logs
          mountPath: /opt/jumpserver/logs
      volumes:
      - name: jms-nfs-data
        nfs:
          path: /Jumpserver/core/data
          server: 192.168.0.55
      - name: jms-nfs-logs
        nfs:
          path: /Jumpserver/core/logs
          server: 192.168.0.55
---
apiVersion: v1
kind: Service
metadata:
  name: jms-core
  namespace: jms
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: jms-core
  ports:
  - name: jms-core-8070
    protocol: TCP
    port: 8070
    targetPort: 8070
  - name: jms-core-8080
    protocol: TCP
    port: 8080
    targetPort: 8080
